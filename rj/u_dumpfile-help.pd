#N canvas 127 22 1095 761 10;
#X obj 89 288 r \$0-textfile;
#X msg 75 154 dump;
#X msg 92 198 numdump;
#X text 116 153 dump file to left outlet;
#X obj 132 342 bng 15 250 50 0 empty empty done 17 7 1 10 -262144 -1
-1;
#X obj 65 407 u_cocollect;
#X msg 65 432;
#X msg 139 376 clear;
#X obj 64 91 loadbang;
#N canvas 622 266 585 513 textfile-methods 0;
#X msg 112 66 rewind;
#X text 275 224 read a file;
#X text 331 253 write one;
#X msg 114 227 read textfile.txt;
#X text 195 67 go to beginning;
#X msg 112 93 bang;
#X text 195 92 output one line as a list;
#X msg 114 255 write /tmp/textfile.txt;
#X msg 114 282 write /tmp/textfile2.txt cr;
#X text 123 303 write a file \, terminating lines only with carriage
return (omitting semicolons.) You can read files this way too \, in
which case carriage returns are mapped to semicolons.;
#X msg 113 351 read textfile.txt cr;
#X msg 112 121 clear;
#X text 267 122 empty the object;
#X text 267 150 add a message;
#X msg 112 201 set 2 4 6 8;
#X text 270 202 clear and then add one message;
#X msg 112 148 add cis boom bah;
#X msg 112 175 add2 bang;
#X text 264 175 add an unterminated message;
#X msg 112 378 print;
#X text 83 30 [u_dumpfile] supports all [textfile] operations:;
#X obj 51 403 outlet;
#X connect 0 0 21 0;
#X connect 3 0 21 0;
#X connect 5 0 21 0;
#X connect 7 0 21 0;
#X connect 8 0 21 0;
#X connect 10 0 21 0;
#X connect 11 0 21 0;
#X connect 14 0 21 0;
#X connect 16 0 21 0;
#X connect 17 0 21 0;
#X connect 19 0 21 0;
#X restore 224 290 pd textfile-methods;
#X obj 224 315 s \$0-textfile;
#X text 217 264 [u_dumpfile] supports all [textfile] operations:;
#X text 154 198 dump file to left outlet \, numbering each line \,
starting from 0;
#X msg 64 116 read m.txt cr;
#X msg 224 360 dump;
#X msg 265 360 numdump;
#X obj 224 410 print DF;
#X obj 65 318 u_dumpfile;
#X obj 224 385 u_dumpfile s.txt cr;
#X msg 82 176 dump 200;
#X text 150 176 deferred dump with a delay of <x> msec between lines.
;
#X msg 96 231 numdump 500;
#X text 380 387 args: <filename> <cr>;
#X text 182 231 deferred and numbered dump;
#N canvas 21 147 582 570 REFERENCE 1;
#X text 25 183 Inlet 0:;
#X text 25 234 Outlet 0:;
#X text 24 31 Name: Template Help Patch;
#X text 24 66 Summary: read and dump a textfile.;
#X text 23 299 Description: [u_dumpfile] is a slightly enhanced clone
of [textfile] that additionally supports dumping a file to its outlet
\, optionally numbered.;
#X text 24 369 See also: [textfile];
#X text 24 107 Argument 0: default textfile to load \, optional.;
#X text 23 140 Argument 1: "cr" to use carriage returns for line endings
;
#X text 24 434 Tags: utility \, text;
#X text 26 263 Outlet 1: bang when done.;
#X coords 0 -1 1 1 450 450 1 10 10;
#X restore -456 53 pd REFERENCE;
#X obj -455 28 cnv 15 450 20 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 8 61 Example:;
#X text 199 488 RjDj Library (https://github.com/rjdj/rjlib) - 2011
;
#X text -331 31 - read and dump a textfile;
#X obj -452 30 u_dumpfile;
#X connect 0 0 17 0;
#X connect 1 0 17 0;
#X connect 2 0 17 0;
#X connect 5 0 6 0;
#X connect 7 0 5 1;
#X connect 8 0 13 0;
#X connect 9 0 10 0;
#X connect 13 0 17 0;
#X connect 14 0 18 0;
#X connect 15 0 18 0;
#X connect 17 0 5 0;
#X connect 17 1 4 0;
#X connect 18 0 16 0;
#X connect 19 0 17 0;
#X connect 21 0 17 0;
